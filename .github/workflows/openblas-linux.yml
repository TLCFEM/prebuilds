name: openblas-linux
on: workflow_dispatch
env:
  ARCHIVE: ''
jobs:
  openblas:
    strategy:
      matrix:
        version: [ 0.3.30 ]
        indexing: [ 32, 64 ]
        os: [ ubuntu-22.04, ubuntu-22.04-arm ]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Download
        run: |
          wget -q https://github.com/xianyi/OpenBLAS/releases/download/v${{ matrix.version }}/OpenBLAS-${{ matrix.version }}.tar.gz
          tar xf OpenBLAS-${{ matrix.version }}.tar.gz && rm OpenBLAS-${{ matrix.version }}.tar.gz
      - name: Compile
        run: |
          cd OpenBLAS-${{ matrix.version }}
          sed -i 's/# DYNAMIC_ARCH = 1/DYNAMIC_ARCH = 1/g' Makefile.rule
          sed -i 's/# BINARY=64/BINARY=64/g' Makefile.rule
          sed -i 's/# USE_THREAD = 0/USE_THREAD = 1/g' Makefile.rule
          sed -i 's/# USE_OPENMP = 1/USE_OPENMP = 1/g' Makefile.rule
          sed -i 's/# NUM_THREADS = 24/NUM_THREADS = 64/g' Makefile.rule
          sed -i 's/# NO_SHARED = 1/NO_SHARED = 1/g' Makefile.rule
          sed -i 's/# NO_CBLAS = 1/NO_CBLAS = 1/g' Makefile.rule
          sed -i 's/# NO_LAPACKE = 1/NO_LAPACKE = 1/g' Makefile.rule
          if [ "${{ matrix.indexing }}" == "64" ]; then
            sed -i 's/# INTERFACE64 = 1/INTERFACE64 = 1/g' Makefile.rule
          fi
          sed -i 's/# GEMM_MULTITHREAD_THRESHOLD = 4/GEMM_MULTITHREAD_THRESHOLD = 64/g' Makefile.rule
          make
          export ARCHIVE=OpenBLAS-${{ matrix.version }}-${{ matrix.os }}-${{ matrix.indexing }}.tar.gz
          echo "ARCHIVE=$ARCHIVE" >> "$GITHUB_ENV"
          ldd libopenblas.so
          tar czf ../$ARCHIVE lib*.*
      - name: Release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: ${{ env.ARCHIVE }}
          asset_name: ${{ env.ARCHIVE }}
          tag: latest
          overwrite: true