name: mimalloc-win
on: workflow_dispatch
env:
  ARCHIVE: ''
jobs:
  mimalloc-win-gcc:
    strategy:
      matrix:
        gcc: [ true, false ]
    runs-on: windows-2022
    steps:
      - name: Winlibs
        if: matrix.gcc
        run: |
          C:/msys64/usr/bin/wget.exe -q https://github.com/brechtsanders/winlibs_mingw/releases/download/13.2.0posix-18.1.5-11.0.1-msvcrt-r8/winlibs-x86_64-posix-seh-gcc-13.2.0-mingw-w64msvcrt-11.0.1-r8.7z
          7z x winlibs-x86_64-posix-seh-gcc-13.2.0-mingw-w64msvcrt-11.0.1-r8.7z
          choco install mingw --version=13.2.0
          $env:PATH="D:/a/prebuilds/prebuilds/mingw64;$env:PATH"
      - name: Name
        run: |
          if ($env:gcc -eq 'true') {
            $env:ARCHIVE = 'mimalloc-win-gcc.7z'
          } else {
            $env:ARCHIVE = 'mimalloc-win-vs.7z'
          }
      - name: Compile
        run: |
          git clone --depth 1 https://github.com/microsoft/mimalloc.git
          mkdir mimalloc-install && mkdir build && cd build
          if ($env:gcc -eq 'true') {
            cmake -G "MinGW Makefiles" -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=D:/a/prebuilds/prebuilds/mimalloc-install ../mimalloc
          } else {
            cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=D:/a/prebuilds/prebuilds/mimalloc-install ../mimalloc
          }
          cmake --build . --target install --config Release --parallel 4
          cd ../mimalloc-install && 7z a ../${{ env.ARCHIVE }} ./*
      - name: Release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: ${{ env.ARCHIVE }}
          asset_name: ${{ env.ARCHIVE }}
          tag: latest
          overwrite: true
