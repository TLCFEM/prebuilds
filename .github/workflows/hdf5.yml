name: hdf5
on: workflow_dispatch
env:
  version: 1.14.6
jobs:
  hdf5-linux:
    runs-on: ubuntu-22.04
    steps:
      - name: Clone
        uses: actions/checkout@v4
      - name: Compile
        run: |
          wget -q https://github.com/HDFGroup/hdf5/releases/download/hdf5_${{ env.version }}/hdf5.tar.gz && tar xf hdf5.tar.gz
          mkdir packing && mkdir build && cd build
          cmake -DCMAKE_BUILD_TYPE=Release -DBUILD_SHARED_LIBS=OFF -DHDF5_ENABLE_Z_LIB_SUPPORT=OFF -DCMAKE_INSTALL_PREFIX=../packing ../hdf5
          cmake --build . --target install --config Release --parallel
          cd ../packing && tar cvzf ../HDF5-${{ env.version }}-linux.tar.gz ./*
      - name: Release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: HDF5-${{ env.version }}-linux.tar.gz
          asset_name: HDF5-${{ env.version }}-linux.tar.gz
          tag: latest
          overwrite: true
  hdf5-macos:
    runs-on: macos-13
    steps:
      - name: Clone
        uses: actions/checkout@v4
      - name: Compile
        run: |
          export CC=gcc-12 && export CXX=g++-12 && export FC=gfortran-12
          wget -q https://github.com/HDFGroup/hdf5/releases/download/hdf5_${{ env.version }}/hdf5.tar.gz && tar xf hdf5.tar.gz
          mkdir packing && mkdir build && cd build
          cmake -DCMAKE_BUILD_TYPE=Release -DBUILD_SHARED_LIBS=OFF -DHDF5_ENABLE_Z_LIB_SUPPORT=OFF -DCMAKE_INSTALL_PREFIX=../packing ../hdf5
          cmake --build . --target install --config Release --parallel
          cd ../packing && tar cvzf ../HDF5-${{ env.version }}-macos.tar.gz ./*
      - name: Release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: HDF5-${{ env.version }}-macos.tar.gz
          asset_name: HDF5-${{ env.version }}-macos.tar.gz
          tag: latest
          overwrite: true
  hdf5-win:
    runs-on: windows-2022
    steps:
      - name: Clone
        uses: actions/checkout@v4
      - name: Compile
        run: |
          C:/msys64/usr/bin/wget.exe -q https://github.com/HDFGroup/hdf5/releases/download/hdf5_${{ env.version }}/hdf5.zip && unzip hdf5.zip
          mkdir packing && mkdir build && cd build
          cmake -DCMAKE_BUILD_TYPE=Release -DBUILD_SHARED_LIBS=OFF -DHDF5_ENABLE_Z_LIB_SUPPORT=OFF -DCMAKE_INSTALL_PREFIX="D:\a\prebuilds\prebuilds\packing" ../hdf5
          cmake --build . --target install --config Release --parallel
          cd ../packing && 7z a ../HDF5-${{ env.version }}-win.zip ./*
      - name: Release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: HDF5-${{ env.version }}-win.zip
          asset_name: HDF5-${{ env.version }}-win.zip
          tag: latest
          overwrite: true
  hdf5-win-gcc:
    runs-on: windows-2022
    steps:
      - name: Clone
        uses: actions/checkout@v4
      - name: Compile
        run: |
          C:/msys64/usr/bin/wget.exe -q https://github.com/brechtsanders/winlibs_mingw/releases/download/13.3.0posix-11.0.1-ucrt-r1/winlibs-x86_64-posix-seh-gcc-13.3.0-mingw-w64ucrt-11.0.1-r1.7z
          7z x winlibs-x86_64-posix-seh-gcc-13.3.0-mingw-w64ucrt-11.0.1-r1.7z
          C:/msys64/usr/bin/wget.exe -q https://github.com/HDFGroup/hdf5/releases/download/hdf5_${{ env.version }}/hdf5.zip && unzip hdf5.zip
          mkdir packing && mkdir build && cd build
          cmake -G "MinGW Makefiles" -DCMAKE_C_COMPILER=D:/a/prebuilds/prebuilds/mingw64/bin/gcc.exe -DCMAKE_CXX_COMPILER=D:/a/prebuilds/prebuilds/mingw64/bin/g++.exe -DCMAKE_Fortran_COMPILER=D:/a/prebuilds/prebuilds/mingw64/bin/gfortran.exe -DCMAKE_BUILD_TYPE=Release -DBUILD_SHARED_LIBS=OFF -DHDF5_ENABLE_Z_LIB_SUPPORT=OFF -DCMAKE_INSTALL_PREFIX="D:\a\prebuilds\prebuilds\packing" ../hdf5
          cmake --build . --target install --config Release --parallel
          cd ../packing && 7z a ../HDF5-${{ env.version }}-win-gcc.zip ./*
      - name: Release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: HDF5-${{ env.version }}-win-gcc.zip
          asset_name: HDF5-${{ env.version }}-win-gcc.zip
          tag: latest
          overwrite: true