name: Major Release
on:
  push:
    branches: [master]
  pull_request:
    branches: [master]
jobs:
  tbb-win-vs:
    runs-on: windows-latest
    steps:
      - name: Clone
        uses: actions/checkout@v2
      - name: Compile
        run: |
          C:/msys64/usr/bin/wget.exe https://github.com/oneapi-src/oneTBB/archive/refs/tags/v2021.4.0.zip
          unzip v2021.4.0.zip
          mkdir build && cd build
          cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=D:/a/prebuilds/prebuilds/tbb-win-vs ../oneTBB-2021.4.0
          cmake --build . --target INSTALL --config Release
          cd ../tbb-win-vs
          7z a ../tbb-win-vs.7z ./*
      - name: Release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: tbb-win-vs.7z
          asset_name: tbb-win-vs.7z
          tag: latest
          overwrite: true
  tbb-win-gcc:
    runs-on: windows-latest
    steps:
      - name: Clone
        uses: actions/checkout@v2
      - name: Compile
        run: |
          choco install mingw --version=10.3.0
          C:/msys64/usr/bin/wget.exe https://github.com/oneapi-src/oneTBB/archive/refs/tags/v2021.4.0.zip
          unzip v2021.4.0.zip
          mkdir build && cd build
          cmake -G "MinGW Makefiles" -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=D:/a/prebuilds/prebuilds/tbb-win-gcc ../oneTBB-2021.4.0
          cmake --build . --target INSTALL --config Release
          cd ../tbb-win-gcc
          7z a ../tbb-win-gcc.7z ./*
      - name: Release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: tbb-win-gcc.7z
          asset_name: tbb-win-gcc.7z
          tag: latest
          overwrite: true
  tbb-linux:
    runs-on: ubuntu-20.04
    steps:
      - name: Compile
        run: |
          wget https://github.com/oneapi-src/oneTBB/archive/refs/tags/v2021.4.0.tar.gz
          tar xf v2021.4.0.tar.gz && rm v2021.4.0.tar.gz
          mkdir tbb-linux && mkdir build && cd build
          cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=../tbb-linux ../oneTBB-2021.4.0
          make install -j4
          cd ..
          tar cvzf tbb-linux.tar.gz ./tbb-linux/*
      - name: Release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: tbb-linux.tar.gz
          asset_name: tbb-linux.tar.gz
          tag: latest
          overwrite: true
  tbb-linux-ubuntu-1804:
    runs-on: ubuntu-18.04
    steps:
      - name: Compile
        run: |
          wget https://github.com/oneapi-src/oneTBB/archive/refs/tags/v2021.4.0.tar.gz
          tar xf v2021.4.0.tar.gz && rm v2021.4.0.tar.gz
          mkdir tbb-linux && mkdir build && cd build
          cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=../tbb-linux ../oneTBB-2021.4.0
          make install -j4
          cd ..
          tar cvzf tbb-linux-ubuntu-18.04.tar.gz ./tbb-linux/*
      - name: Release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: tbb-linux-ubuntu-18.04.tar.gz
          asset_name: tbb-linux-ubuntu-18.04.tar.gz
          tag: latest
          overwrite: true
  tbb-macos:
    runs-on: macos-10.15
    steps:
      - name: Compile
        run: |
          wget https://github.com/oneapi-src/oneTBB/archive/refs/tags/v2021.4.0.tar.gz
          tar xf v2021.4.0.tar.gz && rm v2021.4.0.tar.gz
          mkdir tbb-macos && mkdir build && cd build
          cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=../tbb-macos ../oneTBB-2021.4.0
          make install -j4
          cd ..
          tar cvzf tbb-macos.tar.gz ./tbb-macos/*
      - name: Release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: tbb-macos.tar.gz
          asset_name: tbb-macos.tar.gz
          tag: latest
          overwrite: true
  hdf5-win:
    runs-on: windows-latest
    steps:
      - name: Clone
        uses: actions/checkout@v2
      - name: Compile
        run: |
          C:/msys64/usr/bin/wget.exe https://support.hdfgroup.org/ftp/HDF5/releases/hdf5-1.12/hdf5-1.12.1/src/CMake-hdf5-1.12.1.zip
          unzip CMake-hdf5-1.12.1.zip
          cd CMake-hdf5-1.12.1
          ctest -S HDF5config.cmake,BUILD_GENERATOR=VS201964 -C Release -O hdf5.log
      - name: Release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: CMake-hdf5-1.12.1/HDF5-1.12.1-win64.zip
          asset_name: HDF5-1.12.1-win64.zip
          tag: latest
          overwrite: true
  hdf5-linux:
    runs-on: ubuntu-20.04
    steps:
      - name: Clone
        uses: actions/checkout@v2
      - name: Compile
        run: |
          wget https://support.hdfgroup.org/ftp/HDF5/releases/hdf5-1.12/hdf5-1.12.1/src/CMake-hdf5-1.12.1.tar.gz
          tar xf CMake-hdf5-1.12.1.tar.gz
          cd CMake-hdf5-1.12.1
          ctest -S HDF5config.cmake,BUILD_GENERATOR=Unix -C Release -O hdf5.log
      - name: Release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: CMake-hdf5-1.12.1/HDF5-1.12.1-Linux.tar.gz
          asset_name: HDF5-1.12.1-Linux.tar.gz
          tag: latest
          overwrite: true
  hdf5-macos:
    runs-on: macos-10.15
    steps:
      - name: Clone
        uses: actions/checkout@v2
      - name: Compile
        run: |
          export FC=gfortran-9
          wget https://support.hdfgroup.org/ftp/HDF5/releases/hdf5-1.12/hdf5-1.12.1/src/CMake-hdf5-1.12.1.tar.gz
          tar xf CMake-hdf5-1.12.1.tar.gz
          cd CMake-hdf5-1.12.1
          sed -i '' 's/#set (ADD_BUILD_OPTIONS "${ADD_BUILD_OPTIONS} -DHDF5_ENABLE_Z_LIB_SUPPORT:BOOL=OFF")/set (ADD_BUILD_OPTIONS "${ADD_BUILD_OPTIONS} -DHDF5_ENABLE_Z_LIB_SUPPORT:BOOL=OFF")/g' HDF5options.cmake
          ctest -S HDF5config.cmake,BUILD_GENERATOR=Unix -C Release -O hdf5.log
      - name: Release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: CMake-hdf5-1.12.1/HDF5-1.12.1-Darwin.tar.gz
          asset_name: HDF5-1.12.1-Darwin.tar.gz
          tag: latest
          overwrite: true
  v82-win:
    runs-on: windows-latest
    steps:
      - name: Compile
        run: |
          C:/msys64/usr/bin/wget.exe https://www.vtk.org/files/release/8.2/VTK-8.2.0.tar.gz
          tar xf VTK-8.2.0.tar.gz && del VTK-8.2.0.tar.gz
          mkdir VTK-build && mkdir VTK-out && cd VTK-build
          cmake -DCMAKE_BUILD_TYPE=Release -DVTK_PYTHON_VERSON=3 -DBUILD_SHARED_LIBS=OFF -DCMAKE_INSTALL_PREFIX=D:/a/prebuilds/prebuilds/VTK-out ../VTK-8.2.0
          cmake --build . --target INSTALL --config Release
          cd ../VTK-out
          7z a ../VTK-8.2.0-win.7z ./*
      - name: Release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: VTK-8.2.0-win.7z
          asset_name: VTK-8.2.0-win.7z
          tag: latest
          overwrite: true
  v82-linux:
    runs-on: ubuntu-20.04
    steps:
      - name: Compile
        run: |
          sudo apt-get install mesa-common-dev mesa-utils freeglut3-dev -y
          wget https://www.vtk.org/files/release/8.2/VTK-8.2.0.tar.gz
          tar xf VTK-8.2.0.tar.gz && rm VTK-8.2.0.tar.gz
          mkdir VTK-build && cd VTK-build
          cmake -DCMAKE_BUILD_TYPE=Release -DVTK_PYTHON_VERSON=3 -DBUILD_SHARED_LIBS=OFF -DCMAKE_INSTALL_PREFIX=../VTK-out ../VTK-8.2.0
          make install -j4
          cd ../VTK-out
          tar cvzf ../VTK-8.2.0-linux.tar.gz ./*
      - name: Release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: VTK-8.2.0-linux.tar.gz
          asset_name: VTK-8.2.0-linux.tar.gz
          tag: latest
          overwrite: true
  v82-linux-ubuntu-1804:
    runs-on: ubuntu-18.04
    steps:
      - name: Compile
        run: |
          sudo apt-get install mesa-common-dev mesa-utils freeglut3-dev -y
          wget https://www.vtk.org/files/release/8.2/VTK-8.2.0.tar.gz
          tar xf VTK-8.2.0.tar.gz && rm VTK-8.2.0.tar.gz
          mkdir VTK-build && cd VTK-build
          cmake -DCMAKE_BUILD_TYPE=Release -DVTK_PYTHON_VERSON=3 -DBUILD_SHARED_LIBS=OFF -DCMAKE_INSTALL_PREFIX=../VTK-out ../VTK-8.2.0
          make install -j4
          cd ../VTK-out
          tar cvzf ../VTK-8.2.0-linux-ubuntu-18.04.tar.gz ./*
      - name: Release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: VTK-8.2.0-linux-ubuntu-18.04.tar.gz
          asset_name: VTK-8.2.0-linux-ubuntu-18.04.tar.gz
          tag: latest
          overwrite: true
  v82-macos:
    runs-on: macos-10.15
    steps:
      - name: Compile
        run: |
          brew install glfw3 glew
          wget https://www.vtk.org/files/release/8.2/VTK-8.2.0.tar.gz
          tar xf VTK-8.2.0.tar.gz && rm VTK-8.2.0.tar.gz
          mkdir VTK-build && cd VTK-build
          cmake -DCMAKE_BUILD_TYPE=Release -DVTK_PYTHON_VERSON=3 -DBUILD_SHARED_LIBS=OFF -DCMAKE_INSTALL_PREFIX=../VTK-out ../VTK-8.2.0
          make install -j4
          cd ../VTK-out
          tar cvzf ../VTK-8.2.0-macos.tar.gz ./*
      - name: Release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: VTK-8.2.0-macos.tar.gz
          asset_name: VTK-8.2.0-macos.tar.gz
          tag: latest
          overwrite: true
  v91-win:
    runs-on: windows-latest
    steps:
      - name: Compile
        run: |
          C:/msys64/usr/bin/wget.exe https://www.vtk.org/files/release/9.1/VTK-9.1.0.tar.gz
          tar xf VTK-9.1.0.tar.gz && del VTK-9.1.0.tar.gz
          mkdir VTK-build && mkdir VTK-out && cd VTK-build
          cmake -DCMAKE_BUILD_TYPE=Release -DVTK_PYTHON_VERSON=3 -DBUILD_SHARED_LIBS=OFF -DCMAKE_INSTALL_PREFIX=D:/a/prebuilds/prebuilds/VTK-out ../VTK-9.1.0
          cmake --build . --target INSTALL --config Release
          cd ../VTK-out
          7z a ../VTK-9.1.0-win.7z ./*
      - name: Release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: VTK-9.1.0-win.7z
          asset_name: VTK-9.1.0-win.7z
          tag: latest
          overwrite: true
  v91-linux:
    runs-on: ubuntu-20.04
    steps:
      - name: Compile
        run: |
          sudo apt-get install mesa-common-dev mesa-utils freeglut3-dev libglvnd-dev -y
          wget https://www.vtk.org/files/release/9.1/VTK-9.1.0.tar.gz
          tar xf VTK-9.1.0.tar.gz && rm VTK-9.1.0.tar.gz
          mkdir VTK-build && cd VTK-build
          cmake -DCMAKE_BUILD_TYPE=Release -DVTK_PYTHON_VERSON=3 -DBUILD_SHARED_LIBS=OFF -DCMAKE_INSTALL_PREFIX=../VTK-out ../VTK-9.1.0
          make install -j4
          cd ../VTK-out
          tar cvzf ../VTK-9.1.0-linux.tar.gz ./*
      - name: Release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: VTK-9.1.0-linux.tar.gz
          asset_name: VTK-9.1.0-linux.tar.gz
          tag: latest
          overwrite: true
  v91-linux-ubuntu-1804:
    runs-on: ubuntu-18.04
    steps:
      - name: Compile
        run: |
          sudo apt-get install mesa-common-dev mesa-utils freeglut3-dev libglvnd-dev -y
          wget https://www.vtk.org/files/release/9.1/VTK-9.1.0.tar.gz
          tar xf VTK-9.1.0.tar.gz && rm VTK-9.1.0.tar.gz
          mkdir VTK-build && cd VTK-build
          cmake -DCMAKE_BUILD_TYPE=Release -DVTK_PYTHON_VERSON=3 -DBUILD_SHARED_LIBS=OFF -DCMAKE_INSTALL_PREFIX=../VTK-out ../VTK-9.1.0
          make install -j4
          cd ../VTK-out
          tar cvzf ../VTK-9.1.0-linux-ubuntu-18.04.tar.gz ./*
      - name: Release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: VTK-9.1.0-linux-ubuntu-18.04.tar.gz
          asset_name: VTK-9.1.0-linux-ubuntu-18.04.tar.gz
          tag: latest
          overwrite: true
  v91-macos:
    runs-on: macos-10.15
    steps:
      - name: Compile
        run: |
          brew install glfw3 glew
          wget https://www.vtk.org/files/release/9.1/VTK-9.1.0.tar.gz
          tar xf VTK-9.1.0.tar.gz && rm VTK-9.1.0.tar.gz
          mkdir VTK-build && cd VTK-build
          cmake -DCMAKE_BUILD_TYPE=Release -DVTK_PYTHON_VERSON=3 -DBUILD_SHARED_LIBS=OFF -DCMAKE_INSTALL_PREFIX=../VTK-out ../VTK-9.1.0
          make install -j4
          cd ../VTK-out
          tar cvzf ../VTK-9.1.0-macos.tar.gz ./*
      - name: Release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: VTK-9.1.0-macos.tar.gz
          asset_name: VTK-9.1.0-macos.tar.gz
          tag: latest
          overwrite: true
  v315-openblas-win:
    runs-on: windows-latest
    steps:
      - name: Compile
        run: |
          choco install mingw --version=10.3.0
          C:/msys64/usr/bin/wget.exe https://github.com/xianyi/OpenBLAS/releases/download/v0.3.15/OpenBLAS-0.3.15.zip
          7z x OpenBLAS-0.3.15.zip && del OpenBLAS-0.3.15.zip && cd OpenBLAS-0.3.15
          C:/msys64/usr/bin/sed.exe -i 's/# DYNAMIC_ARCH = 1/DYNAMIC_ARCH = 1/g' Makefile.rule
          C:/msys64/usr/bin/sed.exe -i 's/# BINARY=64/BINARY=64/g' Makefile.rule
          C:/msys64/usr/bin/sed.exe -i 's/# USE_THREAD = 0/USE_THREAD = 1/g' Makefile.rule
          C:/msys64/usr/bin/sed.exe -i 's/# USE_OPENMP = 1/USE_OPENMP = 1/g' Makefile.rule
          C:/msys64/usr/bin/sed.exe -i 's/# NUM_THREADS = 24/NUM_THREADS = 20/g' Makefile.rule
          C:/msys64/usr/bin/sed.exe -i 's/# NO_CBLAS = 1/NO_CBLAS = 1/g' Makefile.rule
          C:/msys64/usr/bin/sed.exe -i 's/# NO_LAPACKE = 1/NO_LAPACKE = 1/g' Makefile.rule
          C:/msys64/usr/bin/sed.exe -i 's/# GEMM_MULTITHREAD_THRESHOLD = 4/GEMM_MULTITHREAD_THRESHOLD = 64/g' Makefile.rule
          make
          7z a ../OpenBLAS-0.3.15-win.7z libopenblas.* exports/*.*
      - name: Release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: OpenBLAS-0.3.15-win.7z
          asset_name: OpenBLAS-0.3.15-win.7z
          tag: latest
          overwrite: true
  v315-openblas-linux:
    runs-on: ubuntu-20.04
    steps:
      - name: Compile
        run: |
          export CC=gcc-9 && export CXX=g++-9 && export FC=gfortran-9
          wget https://github.com/xianyi/OpenBLAS/releases/download/v0.3.15/OpenBLAS-0.3.15.tar.gz
          tar xf OpenBLAS-0.3.15.tar.gz && rm OpenBLAS-0.3.15.tar.gz && cd OpenBLAS-0.3.15
          sed -i 's/# DYNAMIC_ARCH = 1/DYNAMIC_ARCH = 1/g' Makefile.rule
          sed -i 's/# BINARY=64/BINARY=64/g' Makefile.rule
          sed -i 's/# USE_THREAD = 0/USE_THREAD = 1/g' Makefile.rule
          sed -i 's/# USE_OPENMP = 1/USE_OPENMP = 1/g' Makefile.rule
          sed -i 's/# NUM_THREADS = 24/NUM_THREADS = 20/g' Makefile.rule
          sed -i 's/# NO_SHARED = 1/NO_SHARED = 1/g' Makefile.rule
          sed -i 's/# NO_CBLAS = 1/NO_CBLAS = 1/g' Makefile.rule
          sed -i 's/# NO_LAPACKE = 1/NO_LAPACKE = 1/g' Makefile.rule
          sed -i 's/# GEMM_MULTITHREAD_THRESHOLD = 4/GEMM_MULTITHREAD_THRESHOLD = 64/g' Makefile.rule
          make
          tar cvzf ../OpenBLAS-0.3.15-linux.tar.gz lib*.*
      - name: Release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: OpenBLAS-0.3.15-linux.tar.gz
          asset_name: OpenBLAS-0.3.15-linux.tar.gz
          tag: latest
          overwrite: true
  v315-openblas-macos:
    runs-on: macos-10.15
    steps:
      - name: Compile
        run: |
          export CC=gcc-9 && export CXX=g++-9 && export FC=gfortran-9
          wget https://github.com/xianyi/OpenBLAS/releases/download/v0.3.15/OpenBLAS-0.3.15.tar.gz
          tar xf OpenBLAS-0.3.15.tar.gz && rm OpenBLAS-0.3.15.tar.gz && cd OpenBLAS-0.3.15
          sed -i '~' 's/# DYNAMIC_ARCH = 1/DYNAMIC_ARCH = 1/g' Makefile.rule
          sed -i '~' 's/# BINARY=64/BINARY=64/g' Makefile.rule
          sed -i '~' 's/# USE_THREAD = 0/USE_THREAD = 1/g' Makefile.rule
          sed -i '~' 's/# USE_OPENMP = 1/USE_OPENMP = 1/g' Makefile.rule
          sed -i '~' 's/# NUM_THREADS = 24/NUM_THREADS = 20/g' Makefile.rule
          sed -i '~' 's/# NO_SHARED = 1/NO_SHARED = 1/g' Makefile.rule
          sed -i '~' 's/# NO_CBLAS = 1/NO_CBLAS = 1/g' Makefile.rule
          sed -i '~' 's/# NO_LAPACKE = 1/NO_LAPACKE = 1/g' Makefile.rule
          sed -i '~' 's/# GEMM_MULTITHREAD_THRESHOLD = 4/GEMM_MULTITHREAD_THRESHOLD = 64/g' Makefile.rule
          make
          tar cvzf ../OpenBLAS-0.3.15-macos.tar.gz lib*.*
      - name: Release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: OpenBLAS-0.3.15-macos.tar.gz
          asset_name: OpenBLAS-0.3.15-macos.tar.gz
          tag: latest
          overwrite: true
  v320-openblas-win:
    runs-on: windows-latest
    steps:
      - name: Compile
        run: |
          choco install mingw --version=10.3.0
          C:/msys64/usr/bin/wget.exe https://github.com/xianyi/OpenBLAS/releases/download/v0.3.20/OpenBLAS-0.3.20.zip
          7z x OpenBLAS-0.3.20.zip && del OpenBLAS-0.3.20.zip && cd OpenBLAS-0.3.20
          C:/msys64/usr/bin/sed.exe -i 's/# DYNAMIC_ARCH = 1/DYNAMIC_ARCH = 1/g' Makefile.rule
          C:/msys64/usr/bin/sed.exe -i 's/# BINARY=64/BINARY=64/g' Makefile.rule
          C:/msys64/usr/bin/sed.exe -i 's/# USE_THREAD = 0/USE_THREAD = 1/g' Makefile.rule
          C:/msys64/usr/bin/sed.exe -i 's/# USE_OPENMP = 1/USE_OPENMP = 1/g' Makefile.rule
          C:/msys64/usr/bin/sed.exe -i 's/# NUM_THREADS = 24/NUM_THREADS = 20/g' Makefile.rule
          C:/msys64/usr/bin/sed.exe -i 's/# NO_CBLAS = 1/NO_CBLAS = 1/g' Makefile.rule
          C:/msys64/usr/bin/sed.exe -i 's/# NO_LAPACKE = 1/NO_LAPACKE = 1/g' Makefile.rule
          C:/msys64/usr/bin/sed.exe -i 's/# GEMM_MULTITHREAD_THRESHOLD = 4/GEMM_MULTITHREAD_THRESHOLD = 64/g' Makefile.rule
          make
          7z a ../OpenBLAS-0.3.20-win.7z libopenblas.* exports/*.*
      - name: Release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: OpenBLAS-0.3.20-win.7z
          asset_name: OpenBLAS-0.3.20-win.7z
          tag: latest
          overwrite: true
  v320-openblas-linux:
    runs-on: ubuntu-20.04
    steps:
      - name: Compile
        run: |
          export CC=gcc-9 && export CXX=g++-9 && export FC=gfortran-9
          wget https://github.com/xianyi/OpenBLAS/releases/download/v0.3.20/OpenBLAS-0.3.20.tar.gz
          tar xf OpenBLAS-0.3.20.tar.gz && rm OpenBLAS-0.3.20.tar.gz && cd OpenBLAS-0.3.20
          sed -i 's/# DYNAMIC_ARCH = 1/DYNAMIC_ARCH = 1/g' Makefile.rule
          sed -i 's/# BINARY=64/BINARY=64/g' Makefile.rule
          sed -i 's/# USE_THREAD = 0/USE_THREAD = 1/g' Makefile.rule
          sed -i 's/# USE_OPENMP = 1/USE_OPENMP = 1/g' Makefile.rule
          sed -i 's/# NUM_THREADS = 24/NUM_THREADS = 20/g' Makefile.rule
          sed -i 's/# NO_SHARED = 1/NO_SHARED = 1/g' Makefile.rule
          sed -i 's/# NO_CBLAS = 1/NO_CBLAS = 1/g' Makefile.rule
          sed -i 's/# NO_LAPACKE = 1/NO_LAPACKE = 1/g' Makefile.rule
          sed -i 's/# GEMM_MULTITHREAD_THRESHOLD = 4/GEMM_MULTITHREAD_THRESHOLD = 64/g' Makefile.rule
          make
          tar cvzf ../OpenBLAS-0.3.20-linux.tar.gz lib*.*
      - name: Release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: OpenBLAS-0.3.20-linux.tar.gz
          asset_name: OpenBLAS-0.3.20-linux.tar.gz
          tag: latest
          overwrite: true
  v320-openblas-macos:
    runs-on: macos-10.15
    steps:
      - name: Compile
        run: |
          export CC=gcc-9 && export CXX=g++-9 && export FC=gfortran-9
          wget https://github.com/xianyi/OpenBLAS/releases/download/v0.3.20/OpenBLAS-0.3.20.tar.gz
          tar xf OpenBLAS-0.3.20.tar.gz && rm OpenBLAS-0.3.20.tar.gz && cd OpenBLAS-0.3.20
          sed -i '~' 's/# DYNAMIC_ARCH = 1/DYNAMIC_ARCH = 1/g' Makefile.rule
          sed -i '~' 's/# BINARY=64/BINARY=64/g' Makefile.rule
          sed -i '~' 's/# USE_THREAD = 0/USE_THREAD = 1/g' Makefile.rule
          sed -i '~' 's/# USE_OPENMP = 1/USE_OPENMP = 1/g' Makefile.rule
          sed -i '~' 's/# NUM_THREADS = 24/NUM_THREADS = 20/g' Makefile.rule
          sed -i '~' 's/# NO_SHARED = 1/NO_SHARED = 1/g' Makefile.rule
          sed -i '~' 's/# NO_CBLAS = 1/NO_CBLAS = 1/g' Makefile.rule
          sed -i '~' 's/# NO_LAPACKE = 1/NO_LAPACKE = 1/g' Makefile.rule
          sed -i '~' 's/# GEMM_MULTITHREAD_THRESHOLD = 4/GEMM_MULTITHREAD_THRESHOLD = 64/g' Makefile.rule
          make
          tar cvzf ../OpenBLAS-0.3.20-macos.tar.gz lib*.*
      - name: Release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: OpenBLAS-0.3.20-macos.tar.gz
          asset_name: OpenBLAS-0.3.20-macos.tar.gz
          tag: latest
          overwrite: true
